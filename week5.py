# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Design5.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import re

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowTitle("Form Validation-M. Fajar Maulana-F1D022072")
        MainWindow.resize(450, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.layout = QtWidgets.QVBoxLayout(self.centralwidget)

        self.formLayout = QtWidgets.QFormLayout()

        self.nameEdit = QtWidgets.QLineEdit()
        self.formLayout.addRow("Name:", self.nameEdit)

        self.emailEdit = QtWidgets.QLineEdit()
        self.formLayout.addRow("Email:", self.emailEdit)

        self.ageEdit = QtWidgets.QLineEdit()
        self.formLayout.addRow("Age:", self.ageEdit)

        self.phoneEdit = QtWidgets.QLineEdit()
        self.phoneEdit.setInputMask("+62 000 0000 0000;_")
        self.formLayout.addRow("Phone Number:", self.phoneEdit)

        self.addressEdit = QtWidgets.QTextEdit()
        self.addressEdit.setFixedHeight(100)
        self.formLayout.addRow("Address:", self.addressEdit)

        self.genderCombo = QtWidgets.QComboBox()
        self.genderCombo.addItem(" ")
        self.genderCombo.addItems(["Male", "Female"])
        self.formLayout.addRow("Gender:", self.genderCombo)

        self.educationCombo = QtWidgets.QComboBox()
        self.educationCombo.addItem(" ")
        self.educationCombo.addItems([
            "Elementary School",
            "Junior High School",
            "Senior High School",
            "Diploma",
            "Bachelor's Degree",
            "Master's Degree",
            "Doctoral Degree"
        ])
        self.formLayout.addRow("Education:", self.educationCombo)
        self.layout.addLayout(self.formLayout)

        self.buttonLayout = QtWidgets.QHBoxLayout()
        self.saveButton = QtWidgets.QPushButton("Save")
        self.clearButton = QtWidgets.QPushButton("Clear")
        self.buttonLayout.addStretch()
        self.buttonLayout.addWidget(self.saveButton)
        self.buttonLayout.addWidget(self.clearButton)
        self.buttonLayout.addStretch()
        self.layout.addLayout(self.buttonLayout)

        self.statusLabel = QtWidgets.QLabel("")
        self.statusLabel.setStyleSheet("color: red; font-weight: bold")
        self.layout.addWidget(self.statusLabel)

        MainWindow.setCentralWidget(self.centralwidget)

        self.saveButton.clicked.connect(self.save_data)
        self.clearButton.clicked.connect(self.clear_fields)

        QtWidgets.QShortcut(QtGui.QKeySequence("Q"), MainWindow).activated.connect(MainWindow.close)

    def save_data(self):
        name = self.nameEdit.text().strip()
        email = self.emailEdit.text().strip()
        age = self.ageEdit.text().strip()
        phone = self.phoneEdit.text().strip()
        address = self.addressEdit.toPlainText().strip()
        gender = self.genderCombo.currentText()
        education = self.educationCombo.currentText()

        if not all([name, email, age, phone, address]) or gender == "Select Gender" or education == "Select Education":
            self.show_warning("All fields are required.")
            return

        if not re.fullmatch(r"[^@]+@[^@]+\.[^@]+", email) or not email.endswith(".com"):
            self.show_warning("Please enter a valid email address.")
            return

        if not age.isdigit():
            self.show_warning("Please enter a valid age (integer value).")
            return

        if not re.fullmatch(r"\+62 \d{3} \d{4} \d{4}", phone):
            self.show_warning("Please enter a valid 13 digit phone number.")
            return

        QtWidgets.QMessageBox.information(None, " ", "Form submitted successfully.")
        self.clear_fields()

    def show_warning(self, message):
        QtWidgets.QMessageBox.warning(None, "Validation Error", message)

    def clear_fields(self):
        self.nameEdit.clear()
        self.emailEdit.clear()
        self.ageEdit.clear()
        self.phoneEdit.clear()
        self.addressEdit.clear()
        self.genderCombo.setCurrentIndex(0)
        self.educationCombo.setCurrentIndex(0)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
